---
# Redis deployment for caching
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: mockforge
  labels:
    app: redis
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          command:
            - redis-server
            - --maxmemory
            - "256mb"
            - --maxmemory-policy
            - "allkeys-lru"
            - --save
            - ""
            - --appendonly
            - "no"
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 512Mi
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: redis-config
              mountPath: /usr/local/etc/redis
              readOnly: true
      volumes:
        - name: redis-config
          configMap:
            name: redis-config

---
# Redis service
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: mockforge
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    app: redis

---
# Redis configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: mockforge
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300

    # Memory
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    maxmemory-samples 5

    # Persistence (disabled for cache)
    save ""
    appendonly no

    # Performance
    lazyfree-lazy-eviction yes
    lazyfree-lazy-expire yes
    lazyfree-lazy-server-del yes
    replica-lazy-flush yes

    # Logging
    loglevel notice
    logfile ""

    # Clients
    maxclients 10000

---
# Redis Sentinel (for HA) - Optional
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-sentinel
  namespace: mockforge
  labels:
    app: redis-sentinel
spec:
  serviceName: redis-sentinel
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
    spec:
      containers:
        - name: sentinel
          image: redis:7-alpine
          ports:
            - containerPort: 26379
              name: sentinel
          command:
            - redis-sentinel
            - /etc/redis/sentinel.conf
          volumeMounts:
            - name: sentinel-config
              mountPath: /etc/redis
              readOnly: true
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: sentinel-config
          configMap:
            name: redis-sentinel-config

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel
  namespace: mockforge
  labels:
    app: redis-sentinel
spec:
  clusterIP: None
  ports:
    - port: 26379
      targetPort: sentinel
      name: sentinel
  selector:
    app: redis-sentinel

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: mockforge
data:
  sentinel.conf: |
    port 26379
    dir /tmp
    sentinel monitor mockforge-redis redis 6379 2
    sentinel down-after-milliseconds mockforge-redis 5000
    sentinel parallel-syncs mockforge-redis 1
    sentinel failover-timeout mockforge-redis 10000

---
# Redis Exporter for Prometheus
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter
  namespace: mockforge
  labels:
    app: redis-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-exporter
  template:
    metadata:
      labels:
        app: redis-exporter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      containers:
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          ports:
            - containerPort: 9121
              name: metrics
          env:
            - name: REDIS_ADDR
              value: "redis:6379"
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi

---
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter
  namespace: mockforge
  labels:
    app: redis-exporter
spec:
  type: ClusterIP
  ports:
    - port: 9121
      targetPort: metrics
      name: metrics
  selector:
    app: redis-exporter
