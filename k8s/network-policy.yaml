---
# Default deny all ingress traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-ingress
  namespace: default
spec:
  podSelector: {}
  policyTypes:
    - Ingress

---
# Allow ingress to MockForge from Ingress controller
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mockforge-allow-ingress
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: mockforge
  policyTypes:
    - Ingress
  ingress:
    # Allow from ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
          podSelector:
            matchLabels:
              app.kubernetes.io/name: ingress-nginx
      ports:
        - protocol: TCP
          port: 3000  # HTTP
        - protocol: TCP
          port: 3001  # WebSocket
        - protocol: TCP
          port: 50051  # gRPC

    # Allow from same namespace (inter-pod communication)
    - from:
        - podSelector:
            matchLabels:
              app: mockforge
      ports:
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 3001
        - protocol: TCP
          port: 50051
        - protocol: TCP
          port: 9080  # Admin
        - protocol: TCP
          port: 9090  # Metrics

---
# Allow Prometheus to scrape metrics
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mockforge-allow-prometheus
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: mockforge
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
          podSelector:
            matchLabels:
              app: prometheus
      ports:
        - protocol: TCP
          port: 9090  # Metrics endpoint

---
# Allow OTLP traces to be sent to Tempo/Jaeger
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mockforge-allow-tracing
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: mockforge
  policyTypes:
    - Egress
  egress:
    # Allow DNS
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53

    # Allow to tracing backend
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
          podSelector:
            matchLabels:
              app: tempo
      ports:
        - protocol: TCP
          port: 4317  # OTLP gRPC
        - protocol: TCP
          port: 4318  # OTLP HTTP

    # Allow to Redis cache
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379

---
# Allow health checks from Kubernetes
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mockforge-allow-health-checks
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: mockforge
  policyTypes:
    - Ingress
  ingress:
    # Allow kubelet health checks (no source selector needed)
    - ports:
        - protocol: TCP
          port: 9080  # Admin port for health checks

---
# Egress policy for MockForge
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mockforge-egress
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: mockforge
  policyTypes:
    - Egress
  egress:
    # Allow DNS resolution
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

    # Allow HTTPS to external services (if needed)
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443

    # Allow to monitoring namespace
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 9090  # Prometheus
        - protocol: TCP
          port: 3100  # Loki
        - protocol: TCP
          port: 4317  # OTLP
        - protocol: TCP
          port: 4318  # OTLP HTTP

    # Allow to Redis
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379

    # Allow to Vault for secret management
    - to:
        - namespaceSelector:
            matchLabels:
              name: vault
          podSelector:
            matchLabels:
              app: vault
      ports:
        - protocol: TCP
          port: 8200
