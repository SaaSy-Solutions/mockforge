name: Benchmarks

on:
  pull_request:
    paths:
      - 'crates/**/*.rs'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/benchmarks.yml'
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache target directory
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-target-bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Run benchmarks
        run: |
          cd crates/mockforge-core
          cargo bench --bench core_benchmarks -- --save-baseline pr-${{ github.event.number || 'main' }}

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: target/criterion/
          retention-days: 30

      - name: Comment PR with benchmark results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            let comment = '## üìä Benchmark Results\n\n';
            comment += 'Benchmarks have been run. ';
            comment += 'Download the artifacts to see detailed results.\n\n';
            comment += '### Quick Summary\n';
            comment += '- ‚úÖ Benchmarks completed successfully\n';
            comment += '- üìÅ Results available in artifacts\n';
            comment += '- üîç Review the HTML reports for detailed analysis\n';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
