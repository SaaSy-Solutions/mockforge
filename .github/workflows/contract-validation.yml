name: API Contract Validation

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'specs/**'
      - 'openapi.yaml'
  push:
    branches: [ main ]

jobs:
  validate-contracts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install MockForge
        run: cargo install --path crates/mockforge-cli

      - name: Start MockForge server
        run: |
          mockforge-cli serve \
            --http-port 3000 \
            --spec specs/api.yaml &
          echo $! > mockforge.pid

      - name: Wait for server to start
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3000/health; do sleep 2; done'

      - name: Validate contract against live API
        id: validate
        run: |
          mockforge-cli validate \
            --spec specs/api.yaml \
            --endpoint http://localhost:3000 \
            --output report.md \
            --strict

      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: contract-validation-report
          path: report.md

      - name: Comment on PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('report.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Contract Validation Results\n\n${report}`
            });

      - name: Stop MockForge server
        if: always()
        run: |
          if [ -f mockforge.pid ]; then
            kill $(cat mockforge.pid) || true
            rm mockforge.pid
          fi

      - name: Fail if validation failed
        if: steps.validate.outcome == 'failure'
        run: exit 1
