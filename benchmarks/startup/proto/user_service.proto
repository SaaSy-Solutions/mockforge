syntax = "proto3";

package benchmark.user;

// User service for startup benchmarking
service UserService {
  // Unary methods
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse);
  rpc VerifyUser(VerifyUserRequest) returns (VerifyUserResponse);
  rpc DeactivateUser(DeactivateUserRequest) returns (DeactivateUserResponse);
  rpc ReactivateUser(ReactivateUserRequest) returns (ReactivateUserResponse);
  rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse);

  // Server streaming
  rpc StreamUsers(StreamUsersRequest) returns (stream User);
  rpc WatchUserUpdates(WatchUserUpdatesRequest) returns (stream UserUpdate);

  // Client streaming
  rpc BatchCreateUsers(stream CreateUserRequest) returns (BatchCreateUsersResponse);

  // Bidirectional streaming
  rpc SyncUsers(stream UserSyncRequest) returns (stream UserSyncResponse);
}

message User {
  string id = 1;
  string name = 2;
  string email = 3;
  int32 age = 4;
  string status = 5;
  int64 created_at = 6;
  int64 updated_at = 7;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
  int32 age = 3;
}

message CreateUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string id = 1;
  string name = 2;
  string email = 3;
  int32 age = 4;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}

message ListUsersRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message ListUsersResponse {
  repeated User users = 1;
  int32 total = 2;
}

message SearchUsersRequest {
  string query = 1;
}

message SearchUsersResponse {
  repeated User users = 1;
}

message VerifyUserRequest {
  string id = 1;
}

message VerifyUserResponse {
  bool verified = 1;
}

message DeactivateUserRequest {
  string id = 1;
}

message DeactivateUserResponse {
  bool success = 1;
}

message ReactivateUserRequest {
  string id = 1;
}

message ReactivateUserResponse {
  bool success = 1;
}

message GetUserProfileRequest {
  string id = 1;
}

message GetUserProfileResponse {
  User user = 1;
  map<string, string> metadata = 2;
}

message StreamUsersRequest {
  string filter = 1;
}

message WatchUserUpdatesRequest {
  repeated string user_ids = 1;
}

message UserUpdate {
  string user_id = 1;
  string field = 2;
  string old_value = 3;
  string new_value = 4;
}

message BatchCreateUsersResponse {
  repeated User users = 1;
  int32 created_count = 2;
}

message UserSyncRequest {
  User user = 1;
  string operation = 2;
}

message UserSyncResponse {
  string status = 1;
  User user = 2;
}
