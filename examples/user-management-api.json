{
  "openapi": "3.0.0",
  "info": {
    "title": "User Management API",
    "version": "1.0.0",
    "description": "A comprehensive API for managing users, posts, and comments"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "summary": "Create a new user",
        "description": "Create a new user account",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUser",
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "summary": "Update user",
        "description": "Update an existing user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "summary": "Delete user",
        "description": "Delete a user account",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "operationId": "getPosts",
        "summary": "Get all posts",
        "description": "Retrieve a list of all posts",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter posts by user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createPost",
        "summary": "Create a new post",
        "description": "Create a new blog post",
        "tags": ["Posts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "operationId": "getPost",
        "summary": "Get post by ID",
        "description": "Retrieve a specific post by its ID",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "operationId": "getComments",
        "summary": "Get all comments",
        "description": "Retrieve a list of all comments",
        "tags": ["Comments"],
        "parameters": [
          {
            "name": "postId",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Filter comments by post ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createComment",
        "summary": "Create a new comment",
        "description": "Create a new comment on a post",
        "tags": ["Comments"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "URL to user's avatar image"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the user was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the user was last updated"
          }
        },
        "required": ["id", "name", "email", "createdAt", "updatedAt"]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "URL to user's avatar image"
          }
        },
        "required": ["name", "email"]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "description": "URL to user's avatar image"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the post"
          },
          "title": {
            "type": "string",
            "description": "Post title"
          },
          "content": {
            "type": "string",
            "description": "Post content"
          },
          "authorId": {
            "type": "integer",
            "description": "ID of the user who created the post"
          },
          "published": {
            "type": "boolean",
            "description": "Whether the post is published"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the post was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the post was last updated"
          }
        },
        "required": ["id", "title", "content", "authorId", "published", "createdAt", "updatedAt"]
      },
      "CreatePostRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Post title"
          },
          "content": {
            "type": "string",
            "description": "Post content"
          },
          "authorId": {
            "type": "integer",
            "description": "ID of the user who created the post"
          },
          "published": {
            "type": "boolean",
            "description": "Whether the post is published",
            "default": false
          }
        },
        "required": ["title", "content", "authorId"]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the comment"
          },
          "content": {
            "type": "string",
            "description": "Comment content"
          },
          "postId": {
            "type": "integer",
            "description": "ID of the post this comment belongs to"
          },
          "authorId": {
            "type": "integer",
            "description": "ID of the user who created the comment"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the comment was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the comment was last updated"
          }
        },
        "required": ["id", "content", "postId", "authorId", "createdAt", "updatedAt"]
      },
      "CreateCommentRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Comment content"
          },
          "postId": {
            "type": "integer",
            "description": "ID of the post this comment belongs to"
          },
          "authorId": {
            "type": "integer",
            "description": "ID of the user who created the comment"
          }
        },
        "required": ["content", "postId", "authorId"]
      }
    }
  }
}
