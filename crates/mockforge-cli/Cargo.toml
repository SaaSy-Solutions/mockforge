[package]
name = "mockforge-cli"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
description = "CLI interface for MockForge"
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
publish = true  # Binary crate available via cargo install

[[bin]]
name = "mockforge"
path = "src/main.rs"

[dependencies]
clap = { version = "4", features = ["derive", "std", "env"] }
clap_complete = "4"
anyhow = "1.0"
tokio = { workspace = true, features = ["signal"] }
tokio-util = "0.7"
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-opentelemetry = "0.22"
mockforge-core = "0.2.0"
mockforge-http = { version = "0.2.0", path = "../mockforge-http", optional = true }
mockforge-ws = { version = "0.2.0", path = "../mockforge-ws", optional = true }
mockforge-grpc = { version = "0.2.0", path = "../mockforge-grpc", optional = true }
mockforge-graphql = { version = "0.2.0", path = "../mockforge-graphql", optional = true }
mockforge-smtp = { version = "0.2.0", path = "../mockforge-smtp", optional = true }
mockforge-mqtt = { version = "0.2.0", path = "../mockforge-mqtt", optional = true }
mockforge-data = "0.2.0"
mockforge-ui = { version = "0.2.0", path = "../mockforge-ui" }
mockforge-observability = { version = "0.2.0", path = "../mockforge-observability" }
mockforge-tracing = { version = "0.2.0", path = "../mockforge-tracing" }
mockforge-recorder = { version = "0.2.0", path = "../mockforge-recorder" }
mockforge-bench = { version = "0.2.0", path = "../mockforge-bench" }
mockforge-ftp = { version = "0.2.0", path = "../mockforge-ftp", optional = true }
mockforge-kafka = { version = "0.2.0", path = "../mockforge-kafka", optional = true }
mockforge-amqp = { version = "0.2.0", path = "../mockforge-amqp", optional = true }
mockforge-plugin-core = "0.2.0"
mockforge-plugin-loader = { version = "0.2.0", path = "../mockforge-plugin-loader" }
# mockforge-chaos = { path = "../mockforge-chaos" }  # Temporarily disabled due to compilation errors
serde = { workspace = true }
serde_json = { workspace = true }
serde_yaml = "0.9"
url = { workspace = true }
regex = "1.10"
base64 = { workspace = true }
axum = { workspace = true }
hyper = { workspace = true }
reqwest = { workspace = true }
tempfile = "3.8"
rumqttc = { version = "0.24", optional = true }
hex = { workspace = true }
urlencoding = "2.1"
colored = "2.2"
indicatif = "0.17"
console = "0.15"
chrono = { version = "0.4", features = ["serde"] }
lapin = { version = "2.3", optional = true }
rdkafka = { version = "0.38", optional = true }
futures-lite = { version = "2.0", optional = true }

[features]
default = ["http", "mqtt", "ws", "grpc", "graphql", "ftp", "amqp", "kafka", "smtp"]
http = ["mockforge-http"]
mqtt = ["mockforge-mqtt", "mockforge-http/mqtt", "rumqttc"]
ws = ["mockforge-ws"]
grpc = ["mockforge-grpc"]
graphql = ["mockforge-graphql"]
ftp = ["mockforge-ftp"]
kafka = ["mockforge-kafka", "rdkafka"]
amqp = ["mockforge-amqp", "lapin", "futures-lite"]
smtp = ["mockforge-smtp", "mockforge-http/smtp"]

[dev-dependencies]
assert_cmd = "2.0"
predicates = "3.0"
tempfile = "3.8"
