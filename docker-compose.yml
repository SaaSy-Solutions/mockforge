version: '3.8'

services:
  mockforge:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"   # HTTP server
      - "3001:3001"   # WebSocket server
      - "50051:50051" # gRPC server
      - "8080:8080"   # Admin UI
    volumes:
      - ./examples:/app/examples:ro  # Mount examples as read-only
      - ./fixtures:/app/fixtures     # Mount fixtures for read/write
      - ./logs:/app/logs             # Mount logs directory
      - ./config.yaml:/app/config.yaml:ro  # Optional custom config
    environment:
      # Core settings
      - MOCKFORGE_LATENCY_ENABLED=true
      - MOCKFORGE_FAILURES_ENABLED=false
      - MOCKFORGE_LOG_LEVEL=info

      # HTTP configuration
      - MOCKFORGE_HTTP_PORT=3000
      - MOCKFORGE_HTTP_OPENAPI_SPEC=examples/openapi-demo.json
      - MOCKFORGE_RESPONSE_TEMPLATE_EXPAND=true
      - MOCKFORGE_CORS_ENABLED=true

      # WebSocket configuration
      - MOCKFORGE_WS_PORT=3001
      - MOCKFORGE_WS_REPLAY_FILE=examples/ws-demo.jsonl

      # gRPC configuration
      - MOCKFORGE_GRPC_PORT=50051

      # Admin UI configuration
      - MOCKFORGE_ADMIN_ENABLED=true
      - MOCKFORGE_ADMIN_PORT=8080

      # Fixtures configuration
      - MOCKFORGE_FIXTURES_DIR=fixtures
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL for persistent data (if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: mockforge
  #     POSTGRES_USER: mockforge
  #     POSTGRES_PASSWORD: mockforge
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped

# volumes:
#   postgres_data:
